// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PoteDeOuro.Data;
using PoteDeOuro.Enums;
using System;

namespace PoteDeOuro.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PoteDeOuro.Models.Entidades.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Celular");

                    b.Property<int>("Cep");

                    b.Property<string>("ConfirmarSenha")
                        .IsRequired();

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email");

                    b.Property<int>("EnderecoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.Property<int>("TelefoneFixo");

                    b.Property<string>("Usuario")
                        .IsRequired();

                    b.HasKey("ClienteId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PoteDeOuro.Models.Entidades.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<int>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<string>("Estado");

                    b.Property<string>("Numero");

                    b.Property<string>("PontoReferencia");

                    b.Property<string>("Rua");

                    b.HasKey("EnderecoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("PoteDeOuro.Models.Entidades.PedidoProduto", b =>
                {
                    b.Property<int>("PedidoId");

                    b.Property<int>("ProdutoId");

                    b.HasKey("PedidoId", "ProdutoId");

                    b.ToTable("PedidoProduto");
                });

            modelBuilder.Entity("PoteDeOuro.Models.Entidades.Pedidos", b =>
                {
                    b.Property<int>("PedidosId");

                    b.Property<int>("ClienteId");

                    b.Property<int>("Situacao");

                    b.Property<double>("ValorPedido");

                    b.HasKey("PedidosId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("PoteDeOuro.Models.Entidades.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Categoria")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<double>("Preco");

                    b.Property<bool>("Promocao");

                    b.HasKey("IdProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("PoteDeOuro.Models.Entidades.Cliente", b =>
                {
                    b.HasOne("PoteDeOuro.Models.Entidades.Endereco", "Endereco")
                        .WithMany("Clientes")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PoteDeOuro.Models.Entidades.PedidoProduto", b =>
                {
                    b.HasOne("PoteDeOuro.Models.Entidades.Produto", "Produto")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PoteDeOuro.Models.Entidades.Pedidos", "Pedidos")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PoteDeOuro.Models.Entidades.Pedidos", b =>
                {
                    b.HasOne("PoteDeOuro.Models.Entidades.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("PedidosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
